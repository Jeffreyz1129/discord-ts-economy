{
	"id": 0,
	"name": "Lewd labs Economy",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 42,
			"name": "database",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 43,
					"name": "IDataBaseController",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 44,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 11,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "new IDataBaseController",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 43,
										"name": "IDataBaseController"
									}
								}
							]
						},
						{
							"id": 46,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The cache collection for our DataBase."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Collection"
							}
						},
						{
							"id": 47,
							"name": "model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The mongodb Model for our database. If non is passed then the default model will be used."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 71,
										"name": "UserEconomyStructure"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 49,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 50,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								],
								"name": "Model"
							}
						},
						{
							"id": 67,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 73,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 68,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears an entry.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 69,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 63,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 61,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 64,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 65,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 66,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to delete."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 53,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 32,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 54,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 55,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 56,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to get."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 51,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 21,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 52,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provider.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 58,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 47,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 59,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 60,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 61,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 62,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								44
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								46,
								47
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								67,
								63,
								53,
								51,
								58
							]
						}
					],
					"sources": [
						{
							"fileName": "database/index.ts",
							"line": 6,
							"character": 13
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 6,
							"name": "DataBaseController"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "database/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "database/connection",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "mongodb_connect_function",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "database/connection.ts",
							"line": 8,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "mongodb_connect_function",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": "\nA function to connect to mongodb."
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "mongodb connection url\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "database/connection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "database/controller",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 6,
					"name": "DataBaseController",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Database Controller manages the main functionality of the database and our cache system."
					},
					"children": [
						{
							"id": 7,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 10,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 8,
									"name": "new DataBaseController",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 9,
											"name": "model",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 71,
														"name": "UserEconomyStructure"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 10,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 11,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 12,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													}
												],
												"name": "Model"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 6,
										"name": "DataBaseController"
									},
									"overwrites": {
										"type": "reference",
										"id": 45,
										"name": "IDataBaseController.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 44,
								"name": "IDataBaseController.constructor"
							}
						},
						{
							"id": 37,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The cache collection for our DataBase."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 46,
								"name": "IDataBaseController.items"
							}
						},
						{
							"id": 38,
							"name": "model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The mongodb Model for our database. If non is passed then the default model will be used."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 71,
										"name": "UserEconomyStructure"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 39,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 40,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 41,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								],
								"name": "Model"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 47,
								"name": "IDataBaseController.model"
							}
						},
						{
							"id": 29,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 87,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 30,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes a document from our cache and db.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 31,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 68,
										"name": "IDataBaseController.clear"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 67,
								"name": "IDataBaseController.clear"
							}
						},
						{
							"id": 25,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 72,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 26,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a value from our cache and db.\nThis is not the same as the clear function. This will only delete a settings[key] field",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 27,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to delete."
											},
											"type": {
												"type": "reference",
												"id": 79,
												"name": "key_db_options"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 64,
										"name": "IDataBaseController.delete"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 63,
								"name": "IDataBaseController.delete"
							}
						},
						{
							"id": 15,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 38,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 16,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a value from our cache.\nKeep in mind if the data is not in the cache you have to fetch the entire document.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 17,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to get."
											},
											"type": {
												"type": "reference",
												"id": 79,
												"name": "key_db_options"
											}
										},
										{
											"id": 19,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"id": 54,
										"name": "IDataBaseController.get"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 53,
								"name": "IDataBaseController.get"
							}
						},
						{
							"id": 32,
							"name": "getDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 98,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "getDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a document from the mongodb servers and not cache.",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 34,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 71,
														"name": "UserEconomyStructure"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 36,
																	"name": "_id",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "database/controller.ts",
																			"line": 100,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		36
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 13,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 23,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 14,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Saves all the mongodb documents to our cache after starting the db."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 52,
										"name": "IDataBaseController.init"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 51,
								"name": "IDataBaseController.init"
							}
						},
						{
							"id": 20,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 53,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 21,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a value in our cache and db.",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 22,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to set."
											},
											"type": {
												"type": "reference",
												"id": 79,
												"name": "key_db_options"
											}
										},
										{
											"id": 24,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 59,
										"name": "IDataBaseController.set"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 58,
								"name": "IDataBaseController.set"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								7
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								37,
								38
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								29,
								25,
								15,
								32,
								13,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "database/controller.ts",
							"line": 9,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 43,
							"name": "IDataBaseController"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "database/controller.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 70,
			"name": "database/schema",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 71,
					"name": "UserEconomyStructure",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The mongodb model structure. This is required to use with this package"
					},
					"children": [
						{
							"id": 72,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Mongodb Document ID.",
								"text": "This is different from the internal _id in mongodb and is used with our DatabaseController class.\n"
							},
							"sources": [
								{
									"fileName": "database/schema.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Document.id"
							}
						},
						{
							"id": 73,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Our object for all our user settings."
							},
							"sources": [
								{
									"fileName": "database/schema.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								72,
								73
							]
						}
					],
					"sources": [
						{
							"fileName": "database/schema.ts",
							"line": 4,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Document"
						}
					]
				},
				{
					"id": 74,
					"name": "UserDataSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "database/schema.ts",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 71,
								"name": "UserEconomyStructure"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 75,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 76,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 77,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						],
						"name": "Model"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						71
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						74
					]
				}
			],
			"sources": [
				{
					"fileName": "database/schema.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 78,
			"name": "database/types",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 79,
					"name": "key_db_options",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "database/types.ts",
							"line": 1,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "balance"
							},
							{
								"type": "literal",
								"value": "bankLimit"
							},
							{
								"type": "literal",
								"value": "itemsOwned"
							},
							{
								"type": "literal",
								"value": "dailyTimeout"
							},
							{
								"type": "literal",
								"value": "dailyStreak"
							},
							{
								"type": "literal",
								"value": "weeklyTimeout"
							},
							{
								"type": "literal",
								"value": "weeklyStreak"
							},
							{
								"type": "literal",
								"value": "monthlyTimeout"
							},
							{
								"type": "literal",
								"value": "monthlyStreak"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						79
					]
				}
			],
			"sources": [
				{
					"fileName": "database/types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 80,
			"name": "economy",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 81,
					"name": "IEconomy",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Lewd Labs Economy for discord bots with mongodb"
					},
					"children": [
						{
							"id": 82,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 20,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 83,
									"name": "new IEconomy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 84,
											"name": "configOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 225,
												"name": "EconomyConfigOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 81,
										"name": "IEconomy"
									}
								}
							]
						},
						{
							"id": 85,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Our constructor config options"
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 225,
								"name": "EconomyConfigOptions"
							}
						},
						{
							"id": 88,
							"name": "currencyHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Controls user ballance methods"
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 137,
								"name": "CurrencyHandler"
							},
							"defaultValue": "..."
						},
						{
							"id": 86,
							"name": "db",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Allows the raw db function to be accessed throughout the Economy for more user customization."
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DataBaseController"
							},
							"defaultValue": "..."
						},
						{
							"id": 87,
							"name": "fetchManager",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Controls fetch methods four our economy"
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 94,
								"name": "fetchManager"
							},
							"defaultValue": "..."
						},
						{
							"id": 89,
							"name": "connect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 49,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 90,
									"name": "connect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A simple function to connecto mongodb.\nThis is not required to use, but if you do this must be called before other parts of the database or else functions will not work.",
										"tags": [
											{
												"tag": "see",
												"text": "https://www.mongodb.com/ for support with setting up your database.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 91,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Your mongodb URL"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								82
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								85,
								88,
								86,
								87
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								89
							]
						}
					],
					"sources": [
						{
							"fileName": "economy.ts",
							"line": 11,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "economy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 92,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 247,
					"name": "DataBaseController",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 4,
							"character": 18
						}
					],
					"target": 6
				},
				{
					"id": 246,
					"name": "Economy",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 4,
							"character": 9
						}
					],
					"target": 81
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						247,
						246
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 93,
			"name": "managers/fetch",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 94,
					"name": "fetchManager",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Allows easy internal control over all fetch based functions in our package\nThese methods control common acts like fetching for user data, ballance, and more."
					},
					"children": [
						{
							"id": 95,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 96,
									"name": "new fetchManager",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 94,
										"name": "fetchManager"
									}
								}
							]
						},
						{
							"id": 97,
							"name": "db",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "managers/fetch.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DataBaseController"
							},
							"defaultValue": "..."
						},
						{
							"id": 101,
							"name": "fetchBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "managers/fetch.ts",
									"line": 39,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "fetchBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches the database for the users current balance in our economy.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 103,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the discord your is"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 104,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "the type of user storage you wish to fetch for. Defaults to wallet."
											},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "EconomyMethodOption"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "Could not fetch the given users balance."
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 105,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 107,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.bank"
																},
																{
																	"id": 106,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "f.balance.wallet"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		107,
																		106
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 108,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 109,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "f.balance.bank"
																},
																{
																	"id": 110,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.wallet"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		109,
																		110
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 111,
							"name": "fetchCoolDowns",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "managers/fetch.ts",
									"line": 57,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 112,
									"name": "fetchCoolDowns",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 113,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 114,
											"name": "coolDownOption",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 245,
												"name": "EconomyCoolDownOption"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 115,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 117,
																	"name": "dailyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.dailyStreak"
																},
																{
																	"id": 116,
																	"name": "dailyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.dailyTimeout"
																},
																{
																	"id": 121,
																	"name": "monthlyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.monthlyStreak"
																},
																{
																	"id": 120,
																	"name": "monthlyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.monthlyTimeout"
																},
																{
																	"id": 119,
																	"name": "weeklyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.weeklyStreak"
																},
																{
																	"id": 118,
																	"name": "weeklyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.weeklyTimeout"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		117,
																		116,
																		121,
																		120,
																		119,
																		118
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 122,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 126,
																	"name": "dailyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.dailyStreak"
																},
																{
																	"id": 125,
																	"name": "dailyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.dailyTimeout"
																},
																{
																	"id": 128,
																	"name": "monthlyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.monthlyStreak"
																},
																{
																	"id": 127,
																	"name": "monthlyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.monthlyTimeout"
																},
																{
																	"id": 124,
																	"name": "weeklyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.weeklyStreak"
																},
																{
																	"id": 123,
																	"name": "weeklyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.weeklyTimeout"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		126,
																		125,
																		128,
																		127,
																		124,
																		123
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 129,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 133,
																	"name": "dailyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.dailyStreak"
																},
																{
																	"id": 132,
																	"name": "dailyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.dailyTimeout"
																},
																{
																	"id": 131,
																	"name": "monthlyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.monthlyStreak"
																},
																{
																	"id": 130,
																	"name": "monthlyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "u.monthlyTimeout"
																},
																{
																	"id": 135,
																	"name": "weeklyStreak",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.weeklyStreak"
																},
																{
																	"id": 134,
																	"name": "weeklyTimeout",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "u.weeklyTimeout"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		133,
																		132,
																		131,
																		130,
																		135,
																		134
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 98,
							"name": "fetchUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "managers/fetch.ts",
									"line": 22,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 99,
									"name": "fetchUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Searches the db for our user document.\nIf non is found then an empty object will be created under the base db settings object.",
										"returns": "User Object\n"
									},
									"parameters": [
										{
											"id": 100,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 231,
												"name": "UserEconomyTypes"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								95
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								97
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								101,
								111,
								98
							]
						}
					],
					"sources": [
						{
							"fileName": "managers/fetch.ts",
							"line": 13,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						94
					]
				}
			],
			"sources": [
				{
					"fileName": "managers/fetch.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 136,
			"name": "structures/currency",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 137,
					"name": "CurrencyHandler",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The class to handler user balance methods."
					},
					"children": [
						{
							"id": 138,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 139,
									"name": "new CurrencyHandler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 137,
										"name": "CurrencyHandler"
									}
								}
							]
						},
						{
							"id": 141,
							"name": "db",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DataBaseController"
							},
							"defaultValue": "..."
						},
						{
							"id": 140,
							"name": "fetchManager",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 94,
								"name": "fetchManager"
							},
							"defaultValue": "..."
						},
						{
							"id": 174,
							"name": "add",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 110,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 175,
									"name": "add",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add's value to a users wallet or bank.\nWhile similar to the set function, it will not overwrite the old storage",
										"returns": "amount\n"
									},
									"parameters": [
										{
											"id": 176,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "of currency you wish to give the user"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 177,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the discord user to target"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 178,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "wallet or bank option"
											},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "EconomyMethodOption"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "Failed to add the new balance."
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 179,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 182,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.bank"
																},
																{
																	"id": 180,
																	"name": "earned",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 181,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		182,
																		180,
																		181
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 183,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 185,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 184,
																	"name": "earned",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 186,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.wallet"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		185,
																		184,
																		186
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 142,
							"name": "createUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 18,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 143,
									"name": "createUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the base user data for our economy."
									},
									"parameters": [
										{
											"id": 144,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 145,
							"name": "fetch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 44,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 146,
									"name": "fetch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetches for a users ballance",
										"returns": "object\n"
									},
									"parameters": [
										{
											"id": 147,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the discord user"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 148,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 149,
													"name": "bank",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "Could not fetch the given users balance."
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 150,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 152,
																					"name": "bank",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					"defaultValue": "f.balance.bank"
																				},
																				{
																					"id": 151,
																					"name": "wallet",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "f.balance.wallet"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						152,
																						151
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 153,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 154,
																					"name": "bank",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "f.balance.bank"
																				},
																				{
																					"id": 155,
																					"name": "wallet",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					"defaultValue": "f.balance.wallet"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						154,
																						155
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "Promise"
													},
													"defaultValue": "..."
												},
												{
													"id": 156,
													"name": "wallet",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "Could not fetch the given users balance."
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 157,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 159,
																					"name": "bank",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					"defaultValue": "f.balance.bank"
																				},
																				{
																					"id": 158,
																					"name": "wallet",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "f.balance.wallet"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						159,
																						158
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 160,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 161,
																					"name": "bank",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "f.balance.bank"
																				},
																				{
																					"id": 162,
																					"name": "wallet",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					"defaultValue": "f.balance.wallet"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						161,
																						162
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "Promise"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														149,
														156
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 200,
							"name": "leaderBoard",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 202,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 201,
									"name": "leaderBoard",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 202,
							"name": "pay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 213,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 203,
									"name": "pay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Allows users to pay others from their own economy account.",
										"returns": "paid amount\n"
									},
									"parameters": [
										{
											"id": 204,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "of currency you wish to give the user"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 205,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the user who will pay"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 206,
											"name": "targetToPay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the user who will receive the amount"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "Your wallet is to low to pay this user."
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 207,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 210,
																	"name": "newUserWallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 208,
																	"name": "paid",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 209,
																	"name": "userWallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		210,
																		208,
																		209
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 163,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 65,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets's value to a users wallet or bank.",
										"text": "Warning using this function will over write a users ballance NOT add money to it. Please use the add function instead if you need to extend the wallet/bank.",
										"returns": "amount\n"
									},
									"parameters": [
										{
											"id": 165,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "of currency you wish to give the user"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 166,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the discord user to target"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 167,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "wallet or bank option"
											},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "EconomyMethodOption"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "Failed to add the new balance."
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 168,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 170,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.bank"
																},
																{
																	"id": 169,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		170,
																		169
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 171,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 172,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 173,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.wallet"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		172,
																		173
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 187,
							"name": "subtract",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "structures/currency.ts",
									"line": 155,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 188,
									"name": "subtract",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subtract's value to a users wallet or bank.",
										"returns": "amount\n"
									},
									"parameters": [
										{
											"id": 189,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "of currency you wish to give the user"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 190,
											"name": "targetUser",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "the discord user to target"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 191,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "wallet or bank option"
											},
											"type": {
												"type": "reference",
												"id": 244,
												"name": "EconomyMethodOption"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 192,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 195,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.bank"
																},
																{
																	"id": 193,
																	"name": "subtracted",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 194,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		195,
																		193,
																		194
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 196,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 198,
																	"name": "bank",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 197,
																	"name": "subtracted",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "amount"
																},
																{
																	"id": 199,
																	"name": "wallet",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	"defaultValue": "f.balance.wallet"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		198,
																		197,
																		199
																	]
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								138
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								141,
								140
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								174,
								142,
								145,
								200,
								202,
								163,
								187
							]
						}
					],
					"sources": [
						{
							"fileName": "structures/currency.ts",
							"line": 9,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						137
					]
				}
			],
			"sources": [
				{
					"fileName": "structures/currency.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 211,
			"name": "util/errors",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 212,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 213,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 42,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 214,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 215,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 212,
										"name": "LewdLabsModuleError"
									}
								}
							]
						},
						{
							"id": 217,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 218,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 58,
									"character": 6
								}
							],
							"getSignature": [
								{
									"id": 219,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								213
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								217
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								218
							]
						}
					],
					"sources": [
						{
							"fileName": "util/errors.ts",
							"line": 41,
							"character": 6
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						212
					]
				}
			],
			"sources": [
				{
					"fileName": "util/errors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 220,
			"name": "util/functions",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 221,
					"name": "ErrorMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "util/functions.ts",
							"line": 7,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "ErrorMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "internal",
										"text": "\nCustom error messages function"
									}
								]
							},
							"parameters": [
								{
									"id": 223,
									"name": "msg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the Error message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						221
					]
				}
			],
			"sources": [
				{
					"fileName": "util/functions.ts",
					"line": 7,
					"character": 0
				}
			]
		},
		{
			"id": 224,
			"name": "util/typings",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 225,
					"name": "EconomyConfigOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Economy Constructor Config typings."
					},
					"children": [
						{
							"id": 226,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The namne of your economys currency"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 228,
							"name": "defaultBankLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The default bank size allows for a user before updating."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 230,
							"name": "mongodbURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional Connection string for mongodb. If not provided you will have to create your own connection."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 229,
							"name": "robEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If robbing is allowed in your economy."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 227,
							"name": "shopEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If users can buy Items for your economy"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								226,
								228,
								230,
								229,
								227
							]
						}
					],
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 4,
							"character": 17
						}
					]
				},
				{
					"id": 231,
					"name": "UserEconomyTypes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Typings for the User Data in our Economy."
					},
					"children": [
						{
							"id": 240,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Where all the money is stored in the economy"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 241,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 243,
											"name": "bank",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The private user storage that cant be robbed. The bank can also be used to buy items from our shop."
											},
											"sources": [
												{
													"fileName": "util/typings.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 242,
											"name": "wallet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The public user storage that can be robbed."
											},
											"sources": [
												{
													"fileName": "util/typings.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												243,
												242
											]
										}
									]
								}
							}
						},
						{
							"id": 232,
							"name": "bankLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The max balance a user bank can have."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 235,
							"name": "dailyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The daily streak each time the daily command is used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 234,
							"name": "dailyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the daily command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 233,
							"name": "itemsOwned",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "All the items owned by the user from the shop"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 239,
							"name": "monthlyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the monthly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 238,
							"name": "monthlyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the monthly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 237,
							"name": "weeklyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the weekly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 236,
							"name": "weeklyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the weekly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								240,
								232,
								235,
								234,
								233,
								239,
								238,
								237,
								236
							]
						}
					],
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 18,
							"character": 17
						}
					]
				},
				{
					"id": 245,
					"name": "EconomyCoolDownOption",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 49,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "daily"
							},
							{
								"type": "literal",
								"value": "weekly"
							},
							{
								"type": "literal",
								"value": "monthly"
							}
						]
					}
				},
				{
					"id": 244,
					"name": "EconomyMethodOption",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "wallet"
							},
							{
								"type": "literal",
								"value": "bank"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						225,
						231
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						245,
						244
					]
				}
			],
			"sources": [
				{
					"fileName": "util/typings.ts",
					"line": 4,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				42,
				1,
				5,
				70,
				78,
				80,
				92,
				93,
				136,
				211,
				220,
				224
			]
		}
	]
}