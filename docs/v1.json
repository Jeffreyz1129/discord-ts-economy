{
	"id": 0,
	"name": "Lewd.labs Economy",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 41,
			"name": "database",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 42,
					"name": "IDataBaseController",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 43,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 11,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44,
									"name": "new IDataBaseController",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 42,
										"name": "IDataBaseController"
									}
								}
							]
						},
						{
							"id": 45,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The cache collection for our DataBase."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Collection"
							}
						},
						{
							"id": 46,
							"name": "model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The mongodb Model for our database. If non is passed then the default model will be used."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "UserEconomyStructure"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 47,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 49,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								],
								"name": "Model"
							}
						},
						{
							"id": 66,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 73,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears an entry.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 68,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 62,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 61,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 63,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 64,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to delete."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 52,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 32,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 54,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 55,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to get."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 56,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 50,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 21,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 51,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Initializes the provider.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 57,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 47,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a value.",
										"returns": "\n",
										"tags": [
											{
												"tag": "abstract",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 59,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of entry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 61,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								43
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								45,
								46
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								66,
								62,
								52,
								50,
								57
							]
						}
					],
					"sources": [
						{
							"fileName": "database/index.ts",
							"line": 6,
							"character": 13
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 6,
							"name": "DataBaseController"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "database/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "database/connection",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "mongodb_connect_function",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "database/connection.ts",
							"line": 8,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "mongodb_connect_function",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "internal",
										"text": "\nA function to connect to mongodb."
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "mongodb connection url\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "database/connection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "database/controller",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 6,
					"name": "DataBaseController",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Database Controller manages the main functionality of the database and our cache system."
					},
					"children": [
						{
							"id": 7,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 9,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 8,
									"name": "new DataBaseController",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 9,
											"name": "model",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 70,
														"name": "UserEconomyStructure"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 10,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 11,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 12,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													}
												],
												"name": "Model"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 6,
										"name": "DataBaseController"
									},
									"overwrites": {
										"type": "reference",
										"id": 44,
										"name": "IDataBaseController.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 43,
								"name": "IDataBaseController.constructor"
							}
						},
						{
							"id": 36,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The cache collection for our DataBase."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 45,
								"name": "IDataBaseController.items"
							}
						},
						{
							"id": 37,
							"name": "model",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "The mongodb Model for our database. If non is passed then the default model will be used."
							},
							"sources": [
								{
									"fileName": "database/index.ts",
									"line": 10,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "UserEconomyStructure"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 38,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 39,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 40,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								],
								"name": "Model"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 46,
								"name": "IDataBaseController.model"
							}
						},
						{
							"id": 29,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 97,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 30,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes a document from our cache and db.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 31,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 67,
										"name": "IDataBaseController.clear"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 66,
								"name": "IDataBaseController.clear"
							}
						},
						{
							"id": 25,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 79,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 26,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes a value from our cache and db.\nThis is not the same as the clear function. This will only delete a settings[key] field",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 27,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to delete."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Document"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 63,
										"name": "IDataBaseController.delete"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 62,
								"name": "IDataBaseController.delete"
							}
						},
						{
							"id": 15,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 37,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 16,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a value from our cache.\nKeep in mind if the data is not in the cache you have to fetch the entire document.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 17,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to get."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Document"
									},
									"overwrites": {
										"type": "reference",
										"id": 53,
										"name": "IDataBaseController.get"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 52,
								"name": "IDataBaseController.get"
							}
						},
						{
							"id": 32,
							"name": "getDocument",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 108,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "getDocument",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a document from the mongodb servers and not cache.",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 34,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"id": 70,
														"name": "UserEconomyStructure"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {}
														}
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 13,
							"name": "init",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 22,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 14,
									"name": "init",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Saves all the mongodb documents to our cache after starting the db."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 51,
										"name": "IDataBaseController.init"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 50,
								"name": "IDataBaseController.init"
							}
						},
						{
							"id": 20,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "database/controller.ts",
									"line": 56,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 21,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a value in our cache and db.",
										"returns": "- Mongoose query object|document\n"
									},
									"parameters": [
										{
											"id": 22,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "ID of document"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The key to set."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 24,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Document"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"id": 58,
										"name": "IDataBaseController.set"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 57,
								"name": "IDataBaseController.set"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								7
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								36,
								37
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								29,
								25,
								15,
								32,
								13,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "database/controller.ts",
							"line": 8,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 42,
							"name": "IDataBaseController"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "database/controller.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 69,
			"name": "database/schema",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 70,
					"name": "UserEconomyStructure",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The mongodb model structure. This is required to use with this package"
					},
					"children": [
						{
							"id": 71,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Discord user Id."
							},
							"sources": [
								{
									"fileName": "database/schema.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "Document.id"
							}
						},
						{
							"id": 72,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Our object for all our user settings."
							},
							"sources": [
								{
									"fileName": "database/schema.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								71,
								72
							]
						}
					],
					"sources": [
						{
							"fileName": "database/schema.ts",
							"line": 4,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Document"
						}
					]
				},
				{
					"id": 73,
					"name": "UserDataSchema",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "database/schema.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 70,
								"name": "UserEconomyStructure"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 74,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 75,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 76,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						],
						"name": "Model"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						70
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						73
					]
				}
			],
			"sources": [
				{
					"fileName": "database/schema.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 77,
			"name": "economy",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 78,
					"name": "Economy",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "The Lewd Labs Economy for discord bots with mongodb"
					},
					"children": [
						{
							"id": 79,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "new Economy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 81,
											"name": "configOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 106,
												"name": "EconomyConfigOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 78,
										"name": "Economy"
									}
								}
							]
						},
						{
							"id": 82,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Our constructor config options"
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 11,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"name": "EconomyConfigOptions"
							}
						},
						{
							"id": 83,
							"name": "db",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Allows the raw db function to be accessed throughout the Economy for more user customization."
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DataBaseController"
							},
							"defaultValue": "..."
						},
						{
							"id": 88,
							"name": "connect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 64,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "connect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A simple function to connecto mongodb.\nThis is not required to use, but if you do this must be called before other parts of the database or else functions will not work.",
										"tags": [
											{
												"tag": "see",
												"text": "https://www.mongodb.com/ for support with setting up your database.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 90,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "Your mongodb URL"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 84,
							"name": "getRawUser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "economy.ts",
									"line": 44,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 85,
									"name": "getRawUser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The Raw user object fetched from our cache or db.\nThis function is internal and not used by you the user.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 86,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Document"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"id": 70,
																"name": "UserEconomyStructure"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 87,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								79
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								82,
								83
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								88,
								84
							]
						}
					],
					"sources": [
						{
							"fileName": "economy.ts",
							"line": 9,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						78
					]
				}
			],
			"sources": [
				{
					"fileName": "economy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 91,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 126,
					"name": "DataBaseController",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 4,
							"character": 18
						}
					],
					"target": 6
				},
				{
					"id": 125,
					"name": "Economy",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 4,
							"character": 9
						}
					],
					"target": 78
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						126,
						125
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 92,
			"name": "util/errors",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 93,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 94,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 42,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 95,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 96,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 97,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 93,
										"name": "LewdLabsModuleError"
									}
								}
							]
						},
						{
							"id": 98,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 99,
							"name": "name",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "util/errors.ts",
									"line": 58,
									"character": 6
								}
							],
							"getSignature": [
								{
									"id": 100,
									"name": "name",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								94
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								98
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								99
							]
						}
					],
					"sources": [
						{
							"fileName": "util/errors.ts",
							"line": 41,
							"character": 6
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "util/errors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 101,
			"name": "util/functions",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 102,
					"name": "ErrorMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "util/functions.ts",
							"line": 7,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "ErrorMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "\n",
								"tags": [
									{
										"tag": "internal",
										"text": "\nCustom error messages function"
									}
								]
							},
							"parameters": [
								{
									"id": 104,
									"name": "msg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the Error message"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						102
					]
				}
			],
			"sources": [
				{
					"fileName": "util/functions.ts",
					"line": 7,
					"character": 0
				}
			]
		},
		{
			"id": 105,
			"name": "util/typings",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 106,
					"name": "EconomyConfigOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Economy Constructor Config typings."
					},
					"children": [
						{
							"id": 107,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The namne of your economys currency"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 109,
							"name": "defaultBankLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The default bank size allows for a user before updating."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 111,
							"name": "mongodbURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional Connection string for mongodb. If not provided you will have to create your own connection."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 110,
							"name": "robEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If robbing is allowed in your economy."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 108,
							"name": "shopEnabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If users can buy Items for your economy"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								107,
								109,
								111,
								110,
								108
							]
						}
					],
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 4,
							"character": 17
						}
					]
				},
				{
					"id": 112,
					"name": "UserEconomyTypes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Typings for the User Data in our Economy."
					},
					"children": [
						{
							"id": 121,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Where all the money is stored in the economy"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 122,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 124,
											"name": "bank",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The private user storage that cant be robbed. The bank can also be used to buy items from our shop."
											},
											"sources": [
												{
													"fileName": "util/typings.ts",
													"line": 43,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 123,
											"name": "wallet",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "The public user storage that can be robbed."
											},
											"sources": [
												{
													"fileName": "util/typings.ts",
													"line": 40,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												124,
												123
											]
										}
									]
								}
							}
						},
						{
							"id": 113,
							"name": "bankLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The max balance a user bank can have."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 116,
							"name": "dailyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The daily streak each time the daily command is used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 115,
							"name": "dailyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the daily command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 114,
							"name": "itemsOwned",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "All the items owned by the user from the shop"
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 120,
							"name": "monthlyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the monthly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 119,
							"name": "monthlyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the monthly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 118,
							"name": "weeklyStreak",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the weekly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 117,
							"name": "weeklyTimeout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The last cached time the weekly command was used."
							},
							"sources": [
								{
									"fileName": "util/typings.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								121,
								113,
								116,
								115,
								114,
								120,
								119,
								118,
								117
							]
						}
					],
					"sources": [
						{
							"fileName": "util/typings.ts",
							"line": 18,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						106,
						112
					]
				}
			],
			"sources": [
				{
					"fileName": "util/typings.ts",
					"line": 4,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				41,
				1,
				5,
				69,
				77,
				91,
				92,
				101,
				105
			]
		}
	]
}